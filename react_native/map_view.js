// Generated by CoffeeScript 1.10.0
(function() {
  var AppRegistry, MapView, Marker, Parse, React, Text, TextInput, View, _, _MapView, _StyleSheet, _Text, _TextInput, _View, c, markers, react_native_maps, ref, rr, x;

  c = function() {
    return console.log.apply(console, arguments);
  };

  _ = require('lodash');

  React = require('react');

  rr = function() {
    return React.createFactory(React.createClass.apply(React, arguments));
  };

  Parse = require('parse/react-native');

  Parse.initialize('gotango', 'unused');

  Parse.serverURL = "https://go-tango.herokuapp.com/parse";

  ref = require('react-native'), AppRegistry = ref.AppRegistry, _StyleSheet = ref.StyleSheet, _Text = ref.Text, _View = ref.View, _TextInput = ref.TextInput;

  View = React.createFactory(_View);

  Text = React.createFactory(_Text);

  TextInput = React.createFactory(_TextInput);

  react_native_maps = require('react-native-maps');

  x = react_native_maps.Marker;

  c('x999999999999999999', x);

  c('react_native_maps39999999999999999999999999999999', react_native_maps.Marker);

  Marker = React.createFactory(react_native_maps.Marker);

  c('Marker 388888888888888888888888888888888888', Marker);

  _MapView = require('react-native-maps').MapView;

  MapView = React.createFactory(react_native_maps);

  c('MapView99999999999999999', MapView.Marker);

  c('Text333333333333333', Text);

  markers = [
    {
      key: 0,
      latlng: {
        latitude: 32.072528,
        longitude: 34.784366
      },
      title: "Silvia",
      description: "Milonga Lo De Silva"
    }
  ];

  module.exports = rr({
    getInitialState: function() {
      return {
        initialised: false,
        region: {
          latitude: 32.072528,
          longitude: 34.784366,
          latitudeDelta: 0.031,
          longitudeDelta: 0.014
        }
      };
    },
    onRegionChange: function(region) {
      return this.setState({
        region: region
      });
    },
    componentDidMount: function() {
      return setTimeout((function(_this) {
        return function() {
          return _this.setState({
            initialised: true
          });
        };
      })(this), 1000);
    },
    render: function() {
      var marker;
      return View(null, MapView({
        style: {
          height: 400,
          width: 300,
          borderWidth: 1,
          borderColor: 'black'
        },
        region: this.state.region,
        onRegionChange: this.onRegionChange
      }, (function() {
        var i, len, results;
        if (this.state.initialised === true) {
          results = [];
          for (i = 0, len = markers.length; i < len; i++) {
            marker = markers[i];
            c('marker333333333333333333333', marker);
            results.push(Marker({
              key: marker.key,
              coordinate: marker.latlng,
              title: marker.title,
              description: marker.description
            }));
          }
          return results;
        }
      }).call(this)));
    }
  });

}).call(this);
